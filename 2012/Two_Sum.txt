struct T {
    int val;
    int idx;
};

bool cmp(T a, T b) {
    return (a.val < b.val);
}

class Solution {

public:
    vector<int> twoSum(vector<int> &numbers, int target) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int n = numbers.size();
        vector<T> v;
        for (int i = 0; i < n; ++i) {
            T tmp;
            tmp.val = numbers[i];
            tmp.idx = i;
            v.push_back(tmp);
        }
        sort(v.begin(), v.end(), cmp);
        int idx1 = 0, idx2 = n - 1;
        int tmp;
        while ((tmp = v[idx1].val + v[idx2].val) != target) {
            if (tmp < target) {
                ++idx1;
            } else {
                --idx2;
            }
        }
        vector<int> v1;
        v1.push_back(v[idx1].idx + 1);
        v1.push_back(v[idx2].idx + 1);
        if (v1[0] > v1[1]) {
            tmp = v1[0];
            v1[0] = v1[1];
            v1[1] = tmp;
        }
        return v1;
    }
};
