class Solution {
public:
    vector<int> searchRange(int A[], int n, int target) {
// Start typing your C/C++ solution below
// DO NOT write int main() function
        vector<int> ans;
        int left, right;
        int l = 0, r = n - 1;
        while (l <= r) {
            int mid = (l + r) / 2;
            if (A[mid] >= target) {
                r = mid - 1;
            } else {
                l = mid + 1;
            }
        }
        left = r + 1;
        if (left < 0) {
            ans.push_back(-1);
            ans.push_back(-1);
            return ans;
        }
        l = 0;
        r = n - 1;
        while (l <= r) {
            int mid = (l + r) / 2;
            if (A[mid] <= target) {
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        right = l - 1;
        if (left > right) {
            ans.push_back(-1);
            ans.push_back(-1);
            return ans;
        }
        ans.push_back(left);
        ans.push_back(right);
        return ans;
    }
};
