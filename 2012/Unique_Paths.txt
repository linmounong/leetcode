class Solution {
public:

    int ans[200][100];

    Solution() {
        for (int i = 0; i < 200; ++i) {
            for (int j = 0; j < 100; ++j) {
                ans[i][j] = -1;
            }
        }
    }

    int foo(int p1, int p2) {
        if (ans[p1][p2] >= 0) {
            return ans[p1][p2];
        }
        int ret;
        if (p1 < p2) {
            ret = 0;
        } else if (p2 == 0 || p1 == 0) {
            ret = 1;
        } else if (p2 == 1) {
            ret = p1;
        } else if (ans[p1][p1 - p2] >= 0) {
            ret = ans[p1][p1 - p2];
        } else {
            ret = foo(p1 - 1, p2) + foo(p1 - 1, p2 - 1);
        }
        return (ans[p1][p1 - p2] = ans[p1][p2] = ret);
    }

    int uniquePaths(int m, int n) {
// Start typing your C/C++ solution below
// DO NOT write int main() function
        int p1 = m + n - 2;
        int p2 = (m < n? m: n) - 1;
        if (p1 == 0) {
            return 1;
        }
        return foo(p1, p2);
    }
};
