class Solution {
public:
    vector<string> v;
    int num[4];
    int n;
    
    void foo(string &s, int idx) {
        if (idx == s.size()) {
            if (n == 3) {
                char tmp[20];
                sprintf(tmp, "%d.%d.%d.%d", num[0], num[1], num[2], num[3]);
                if (strlen(tmp) == 3 + s.size())
                    v.push_back(tmp);
            }   
            return;
        }
        int i = s[idx] - '0';
        if (n < 3) {
            num[++n] = i;
            foo(s, idx + 1);
            num[n--] = 0;
        }
        if (n < 0)
            return;
        int j = num[n] * 10 + i;
        if (j < 256) {
            num[n] = j;
            foo(s, idx + 1);
            num[n] /= 10;
        }
    }

    vector<string> restoreIpAddresses(string s) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        v.clear();
        n = -1;
        num[0] = num[1] = num[2] = num[3] = 0;
        foo(s, 0);
        return v;
    }
};
