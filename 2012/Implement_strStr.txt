void cal_next(char *p, int *next, int len) {
	if (len <= 0) {
		return;
	}
	next[0] = -1;
	int i = 1, j = -1;
	while (i < len) {
		while (j >= 0 && p[j] != p[i - 1]) {
			j = next[j];
		}
		next[i++] = ++j;
	}
}

char *strStr(char *s, char *p) {
	if (!s || !p) {
		return NULL;
	}
	int lens = strlen(s);
	int lenp = strlen(p);
	if (lenp > lens) {
		return NULL;
	}
	int *next = (int *) malloc(sizeof(int) * lenp);
	cal_next(p, next, lenp);
	int i = 0, j = 0;
	while (i < lens && j < lenp) {
		while (j >= 0 && s[i] != p[j]) {
			j = next[j];
		}
		++i;
		++j;
	}
	free(next);
	if (j == lenp) {
		return s + i - j;
	} else {
		return NULL;
	}
}

