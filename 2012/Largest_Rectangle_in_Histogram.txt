class Solution {
public:
    int largestRectangleArea(vector<int> &height) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int n = height.size();
        if (n == 0) {
            return 0;
        } else if (n == 1) {
            return height[0];
        }
        int *l = new int[n];
        int *r = new int[n];
        vector<int> v;
        for (int i = 0; i < n; ++i) {
            while (!v.empty() && height[v.back()] >= height[i]) {
                v.pop_back();
            }
            if (v.empty()) {
                l[i] = -1;
            } else {
                l[i] = v.back();
            }
            v.push_back(i);
        }
        v.clear();
        for (int i = n - 1; i >= 0; --i) {
            while (!v.empty() && height[v.back()] >= height[i]) {
                v.pop_back();
            }
            if (v.empty()) {
                r[i] = n;
            } else {
                r[i] = v.back();
            }
            v.push_back(i);
        }
        int max = 0;
        for (int i = 0; i < n; ++i) {
            int tmp = height[i] * (r[i]-l[i]-1);
            if (tmp > max) {
                max = tmp;
            }
        }
        delete(l);
        delete(r);
        return max;
    }
};
